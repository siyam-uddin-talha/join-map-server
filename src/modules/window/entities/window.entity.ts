import { ApiProperty } from '@nestjs/swagger';
import {
  PrimaryGeneratedColumn,
  CreateDateColumn,
  UpdateDateColumn,
  Column,
  Entity,
  ManyToOne,
  JoinColumn,
  OneToMany,
} from 'typeorm';
import { Room } from '../../room/entities';
import { AskWork } from '../../askWork/entities';
import { AskAudit } from '../../askAudit/entities';
import { WindowComment } from '../../windowComment/entities';
import { AskChange } from '../../askChange/entities';

@Entity('window')
export class Window {
  @ApiProperty({
    example: 'ffa31807-f019-43d7-a2b9-d2f899784d72',
    description: 'Unique identifier (autogenerated)',
    required: false,
  })
  @PrimaryGeneratedColumn('uuid')
  public id: string;

  @CreateDateColumn({ type: 'timestamptz' })
  public createdAt: Date;

  @UpdateDateColumn({ type: 'timestamptz' })
  public updatedAt: Date;

  @ApiProperty({ example: 'Example window', description: 'Window Name' })
  @Column({ type: 'text' })
  public name: string;

  @ApiProperty({
    example: 'Example description',
    description: 'Window Description',
  })
  @Column({ type: 'text' })
  public description: string;

  @ManyToOne(() => Room, (room) => room.windows, { onDelete: 'SET NULL' })
  @JoinColumn()
  public room: Room;

  @OneToMany(() => AskWork, (askWork) => askWork.window, { cascade: true })
  public askWorks: AskWork[];

  @OneToMany(() => AskAudit, (askAudit) => askAudit.window, { cascade: true })
  public askAudits: AskAudit[];

  @OneToMany(() => AskChange, (askChange) => askChange.window, {
    cascade: true,
  })
  public askChanges: AskChange[];

  @OneToMany(() => WindowComment, (windowComment) => windowComment.window, {
    cascade: true,
  })
  public windowComments: WindowComment[];
}
