import { ApiProperty } from '@nestjs/swagger';
import {
  PrimaryGeneratedColumn,
  CreateDateColumn,
  UpdateDateColumn,
  Column,
  Entity,
} from 'typeorm';

export enum ROLE {
  USER = 'user',
  ADMIN = 'admin',
}

const ROLE_VALUES = Object.values(ROLE);

@Entity('user')
export class User {
  @ApiProperty({
    example: 'ffa31807-f019-43d7-a2b9-d2f899784d72',
    description: 'Unique identifier (autogenerated)',
    required: false,
  })
  @PrimaryGeneratedColumn('uuid')
  public id: string;

  @CreateDateColumn({ type: 'timestamptz' })
  public createdAt: Date;

  @UpdateDateColumn({ type: 'timestamptz' })
  public updatedAt: Date;

  @ApiProperty({ example: 'example@email.com', description: 'User email' })
  @Column({ type: 'text', unique: true })
  public email: string;

  @ApiProperty({ example: '123.png', description: 'User avatar' })
  @Column({ type: 'text', nullable: true })
  public image: string;

  @ApiProperty({ example: '123456', description: 'User password' })
  @Column({ type: 'text' })
  public password: string;

  @ApiProperty({ example: 'David', description: 'User first name' })
  @Column({ type: 'text' })
  public firstName: string;

  @ApiProperty({ example: 'Meyer', description: 'User last name' })
  @Column({ type: 'text' })
  public lastName: string;

  @ApiProperty({ example: 'client', description: 'User role' })
  @Column({ type: 'enum', default: ROLE.USER, enum: ROLE_VALUES })
  public role: ROLE;

  @ApiProperty({
    example: '2021-11-29 19:40:53.876+02',
    description: 'User verified email date',
    required: false,
  })
  @Column({ type: 'timestamptz', nullable: true })
  public emailVerifiedAt: Date;
}
