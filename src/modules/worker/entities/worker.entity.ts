import { ApiProperty } from '@nestjs/swagger';
import {
  PrimaryGeneratedColumn,
  CreateDateColumn,
  UpdateDateColumn,
  Column,
  Entity,
  ManyToOne,
  JoinColumn,
} from 'typeorm';
import { AskWork } from '../../askWork/entities';
import { AskAudit } from '../../askAudit/entities';

@Entity('worker')
export class Worker {
  @ApiProperty({
    example: 'ffa31807-f019-43d7-a2b9-d2f899784d72',
    description: 'Unique identifier (autogenerated)',
    required: false,
  })
  @PrimaryGeneratedColumn('uuid')
  public id: string;

  @CreateDateColumn({ type: 'timestamptz' })
  public createdAt: Date;

  @UpdateDateColumn({ type: 'timestamptz' })
  public updatedAt: Date;

  @ApiProperty({ example: 'David', description: 'Worker Name' })
  @Column({ type: 'text', unique: true })
  public name: string;

  @ApiProperty({ example: 'Salmon', description: 'Worker Last Name' })
  @Column({ type: 'text' })
  public address: string;

  @ApiProperty({ example: 'ronal@gmail.com', description: 'Worker Email' })
  @Column({ type: 'text', unique: true })
  public email: string;

  @ApiProperty({ example: '0000-0000', description: 'Worker Phone' })
  @Column({ type: 'text', unique: true })
  public phone: string;

  @ApiProperty({ example: '123456', description: 'One time password' })
  @Column({ type: 'text', nullable: true })
  public otp: string;

  @ApiProperty({ example: '123456', description: 'Password' })
  @Column({ type: 'text', nullable: true })
  public password: string;

  @ApiProperty({
    example: '2021-11-29 19:40:53.876+02',
    description: 'Worker verified otp',
    required: false,
  })
  @Column({ type: 'timestamptz', nullable: true })
  public otpVerifiedAt: Date;

  @ApiProperty({
    example: 'https://example.com/',
    description: 'Website',
  })
  @Column({ type: 'text', nullable: true })
  public website: string;

  @ManyToOne(() => AskWork, (askWork) => askWork.workers, {
    onDelete: 'SET NULL',
  })
  @JoinColumn()
  public askWork: AskWork;

  @ManyToOne(() => AskAudit, (askAudit) => askAudit.workers, {
    onDelete: 'SET NULL',
  })
  @JoinColumn()
  public askAudit: AskAudit;
}
